datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum PlanType {
  SILVER
  GOLD
  PREMIUM
}

enum Status {
  PENDING
  ACTIVE
  INACTIVE
  SUSPENDED
}

enum OrderStatus {
  PENDING
  PROCESSED
  SHIPPED
  DELIVERED
  CANCELED
  RETURNED
}

enum CommissionType {
  DIRECT
  LEVEL
  BONUS
}

model User {
  id              String    @id @default(cuid())
  name            String?
  email           String    @unique
  password        String?
  wallet          Decimal   @default(0)

  planId          String?
  status          Status    @default(ACTIVE)
  join_date       DateTime  @default(now())
  referral_code   String?
  leftDownlineId  String?   @unique
  rightDownlineId String?   @unique
  sponsorId       String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  my_self_pv      Int?
  my_status       String?
  kyc_status      String?
  total_earning   Decimal @default(0)
  total_balance   Decimal @default(0)
  user_id         String?
  referral_link   String?
  profile_picture String?
  imageUrl        String?
  primaryPhoneNumber String?
  username          String?   @unique
  clerk_id        String?   @unique


  leftDownline    User?     @relation("LeftDownline", fields: [leftDownlineId], references: [id])
  rightDownline   User?     @relation("RightDownline", fields: [rightDownlineId], references: [id])
  orders          Order[]
  commissions     Commission[]
  plan            Plan?     @relation(fields: [planId], references: [id])

  leftParent      User?     @relation("LeftDownline")
  rightParent     User?     @relation("RightDownline")
}

model Plan {
  id                   String  @id @default(cuid())
  type                 PlanType
  name                 String
  price                Decimal
  benefits             String[]
  commission_structure Json?
  status               Status   @default(ACTIVE)
  start_date           DateTime?
  end_date             DateTime?

  users                User[]
}

model Product {
  id          String  @id @default(cuid())
  name        String
  description String?
  price       Decimal

  orders      Order[]
}

model Order {
  id             String    @id @default(cuid())
  userId         String
  productId      String
  quantity       Int
  totalPrice     Decimal
  createdAt      DateTime  @default(now())
  order_status   OrderStatus @default(PENDING)
  commission_paid Boolean  @default(false)
  shipping_address String?
  payment_status  String?
  refund_status   String?
  order_notes     String?

  user           User      @relation(fields: [userId], references: [id])
  product        Product   @relation(fields: [productId], references: [id])
  commissions    Commission[]
}

model Commission {
  id        String  @id @default(cuid())
  userId    String
  amount    Decimal
  type      CommissionType
  date      DateTime
  order_id  String?
  commission_plan_id String?

  user      User   @relation(fields: [userId], references: [id])
  order     Order? @relation(fields: [order_id], references: [id], onDelete: Cascade)
}
